//---------------------------------------------------------------------------
#pragma once
//---------------------------------------------------------------------------
#include <vector>
#include <string>
//---------------------------------------------------------------------------


namespace impl 
{


// "машина" обработки готовых строковых инструкций для реализации алгоритма
// разбора на "пачки" как было в 6-ом задании
class t_bulk_machine
{

  public: 

    t_bulk_machine(size_t aun_stat_bulk_size);

    // деструктор, т.к. в конце иногда могут оставаться данные, и их нужно тоже распечатать
    ~t_bulk_machine();

    // обрабатываем новую строку:
    void handle_instruction(const std::string& astr);

  private:

    // выводим текущий буфер куда надо (в файл, в консоль...)
    void print_batch_and_clear();

    // сохраняем в файл:
    int save_to_file(const std::string& astr_batch);


    // *************************** Данные *******************************
    // размер статического блока
    size_t m_un_stat_buld_size = 0;

    // текущий уровень вложенности динамических блоков
    size_t m_un_dyn_depth = 0;

    // буфер хранения для ещё незавершённых пачек:
    std::vector<std::string> m_vec_buffer;

};


}
//---------------------------------------------------------------------------